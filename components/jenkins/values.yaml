controller:
  componentName: "jenkins-controller"
  image:
    registry: "docker.io"
    repository: "jenkins/jenkins"
    tag:
    tagLabel: jdk17
    pullPolicy: "IfNotPresent"
  resources:
    requests:
      memory: "1Gi"
    limits:
      memory: "1Gi"
  # -- Name of default cloud configuration.
  cloudName: "openshift"
  # Put labels on Jenkins controller pod
  # -- Custom Pod labels (an object with `label-key: label-value` pairs)
  podLabels:
    tssc-jenkins-agent: true
  JCasC:
    defaultConfig: true
    configScripts:
      jenkins-system: |
        jenkins:
          systemMessage: "Jenkins configured with Configuration as Code for RHTAP on OpenShift"
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "admin"
                  name: "Jenkins Admin"
                  password: "${chart-admin-password}"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
  serviceType: ClusterIP
  servicePort: 8080
  # OpenShift 4.18 uses restricted-v2 SCC by default. To allow the init container to write to the
  # persistent volume, we must set the fsGroup. This ensures the volume is group-writable by the
  # Jenkins user (gid 1000), resolving the permission denied error.
  usePodSecurityContext: true
  podSecurityContextOverride:
    fsGroup: 1000
  containerSecurityContext: {}
  installPlugins:
    - openshift-client
    - openshift-login
    - gitlab-plugin
    - github
    - bitbucket
    - kubernetes
    - workflow-aggregator
    - git
    - configuration-as-code
    - job-dsl:latest
  # sidecars:
  #   configAutoReload:
  #     # If enabled: true, Jenkins Configuration as Code will be reloaded on-the-fly without a reboot.
  #     # If false or not-specified, JCasC changes will cause a reboot and will only be applied at the subsequent start-up.
  #     # Auto-reload uses the http://<jenkins_url>/reload-configuration-as-code endpoint to reapply config when changes to
  #     # the configScripts are detected.
  #     # -- Enable Jenkins Config as Code auto-reload
  #     enabled: true
  #     image:
  #       # -- Registry for the image that triggers the reload
  #       registry: docker.io
  #       # -- Repository of the image that triggers the reload
  #       repository: kiwigrid/k8s-sidecar
  #       # -- Tag for the image that triggers the reload
  #       tag: 1.30.7
  #     imagePullPolicy: IfNotPresent
  #     resources: {}
  #       #   limits:
  #       #     cpu: 100m
  #       #     memory: 100Mi
  #       #   requests:
  #       #     cpu: 50m
  #       #     memory: 50Mi
  #     # -- Enables additional volume mounts for the config auto-reload container
  #     additionalVolumeMounts: []
  #       #   - name: auto-reload-config
  #       #     mountPath: /var/config/logger
  #       #   - name: auto-reload-logs
  #       #     mountPath: /var/log/auto_reload
  #     # -- Config auto-reload logging settings
  #     logging:
  #       # See default settings https://github.com/kiwigrid/k8s-sidecar/blob/master/src/logger.py
  #       configuration:
  #         # -- Enables custom log config utilizing using the settings below.
  #         override: false
  #         logLevel: INFO
  #         formatter: JSON
  #         logToConsole: true
  #         logToFile: false
  #         maxBytes: 1024
  #         backupCount: 3
  # Openshift route
  route:
    # -- Enables openshift route
    enabled: true
    # -- Route labels
    labels: {}
    # -- Route annotations
    annotations: {}
    # -- Route path
    path:

persistence:
  enabled: true
  size: "100Gi"
  # If you have a specific storage class, uncomment and set it here
  # storageClass: "your-storage-class"

rbac:
  create: true
  # This is important for OpenShift to manage SCCs correctly.
  useOpenShiftNonRootSCC: true
  serviceAccount:
    create: true
    name: "jenkins"

agent:
  # -- Enable Kubernetes plugin jnlp-agent podTemplate
  enabled: true
  # -- Max number of agents to launch for a whole cluster.
  containerCap: 100
  # -- Max number of agents to launch for this type of agent
  instanceCap: 2147483647
  # Useful when configuring agents only with the podTemplates value, since the default podTemplate populated by values mentioned above will be excluded in the rendered template.
  # -- Disable the default Jenkins Agent configuration
  disableDefaultAgent: true

  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.
  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.
  # Keys are only used to give the pod template a meaningful name. The only restriction is they may only contain RFC 1123 \ DNS label
  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.
  # For this pod templates configuration to be loaded, the following values must be set:
  # controller.JCasC.defaultConfig: true
  # Best reference is https://<jenkins_url>/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.
  # -- Configures extra pod templates for the default kubernetes cloud
  podTemplates:
    tssc: |
      - name: tssc
        label: tssc-jenkins-agent
        agentInjection: true
        serviceAccount: jenkins
        namespace: jenkins
        idleMinutes: 0
        podRetention: Never
        nodeUsageMode: NORMAL
        containers:
          - name: jnlp
            image: quay.io/quay_xjiang/tssc-agent:latest
            ttyEnabled: false
            privileged: false
            alwaysPullImage: true
            resourceRequestCpu: "100m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1024Mi"
            workingDir: "/home/jenkins/agent"
